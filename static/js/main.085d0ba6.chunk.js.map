{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isRendered","isReversed","sortBy","startRender","setState","sortByAlphabetical","sortByLength","reverseGoods","resetAll","this","copyGoods","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUWC,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,YAAY,EACZC,YAAY,EACZC,OAAQ,IALZ,EAQEC,YAAc,WACZ,EAAKC,SAAS,CACZJ,YAAY,KAVlB,EAcEK,mBAAqB,WACnB,EAAKD,SAAS,CAAEF,OAAQ,cAf5B,EAkBEI,aAAe,WACb,EAAKF,SAAS,CAAEF,OAAQ,YAnB5B,EAsBEK,aAAe,WACb,EAAKH,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAxBzB,EA4BEO,SAAW,WACT,EAAKJ,SAAS,CACZL,MAAM,GAAD,OAAMH,GACXK,YAAY,EACZC,OAAQ,MAhCd,4CAoCE,WACE,MAKIO,KAAKX,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OAEIQ,EAAS,YAAOX,GAmBtB,OAjBAW,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQX,GACN,IAAK,WACH,OAAOU,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITd,GACFS,EAAUM,UAIV,qBAAKC,UAAU,MAAf,SACIjB,EAEE,qCACE,8CACA,wBAAQkB,KAAK,SAASC,QAASV,KAAKJ,mBAApC,8BAGA,wBAAQa,KAAK,SAASC,QAASV,KAAKH,aAApC,4BAGA,wBAAQY,KAAK,SAASC,QAASV,KAAKF,aAApC,qBAGA,wBAAQW,KAAK,SAASC,QAASV,KAAKD,SAApC,mBAGA,6BACGE,EAAUU,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,WAQf,wBAAQH,KAAK,SAASC,QAASV,KAAKN,YAApC,yBA1FZ,GAAyBmB,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.085d0ba6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[],\n  isRendered: boolean,\n  isReversed: boolean,\n  sortBy: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isRendered: false,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  startRender = () => {\n    this.setState({\n      isRendered: true,\n    });\n  };\n\n  sortByAlphabetical = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetAll = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const {\n      goods,\n      isRendered,\n      isReversed,\n      sortBy,\n    } = this.state;\n    const copyGoods = [...goods];\n\n    copyGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        { isRendered\n          ? (\n            <>\n              <h1>visible side</h1>\n              <button type=\"button\" onClick={this.sortByAlphabetical}>\n                Sort by Alphabet\n              </button>\n              <button type=\"button\" onClick={this.sortByLength}>\n                Sort by Length\n              </button>\n              <button type=\"button\" onClick={this.reverseGoods}>\n                Reverse\n              </button>\n              <button type=\"button\" onClick={this.resetAll}>\n                Reset\n              </button>\n              <ul>\n                {copyGoods.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )\n          : (\n            <button type=\"button\" onClick={this.startRender}>\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}